tosca_definitions_version: cloudify_dsl_1_4

description: Deploys GitLab using the official Helm Chart

imports:
  - cloudify/types/types.yaml
  - plugin:cloudify-helm-plugin
  - plugin:cloudify-kubernetes-plugin

inputs:

  gitlab_domain:
    type: string
    display_label: GitLab Domain
    default: gitlab.anthonycritelli.com

  cert_manager_issuer_email:
    type: string
    display_label: Cert Manager Issuer Email
    default: moshem@cloudify.co

  kubernetes_master_endpoint:
    type: string
    display_label: Kubernetes API Endpoint
    default: https://34.165.1.241

  kubernetes_client_config:
    default:
      authentication:
        gcp_service_account: { get_secret: gcp_credentials }
      configuration:
        api_options:
          host: { get_input: kubernetes_master_endpoint }
          verify_ssl: false
          debug: false

  helm_client_config:
    default:
      configuration:
        file_content: {get_secret: kube_config_new2 }
      authentication:
        gcp_service_account: { get_secret: gcp_credentials }



node_templates:

  helm_install:
    type: cloudify.nodes.helm.Binary
    properties:
      use_existing_resource: false
      installation_source: 'https://get.helm.sh/helm-v3.10.2-linux-amd64.tar.gz'

  namespace:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      client_config: { get_input: kubernetes_client_config }
      file:
        resource_path: manifests/namespace.yaml

  certmanager_repo:
    type: cloudify.nodes.helm.Repo
    properties:
      resource_config:
        name: jetstack
        repo_url: https://charts.jetstack.io/
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host

  gitlab_repo:
    type: cloudify.nodes.helm.Repo
    properties:
      resource_config:
        name: gitlab
        repo_url: https://charts.gitlab.io/
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host

  certmanager_release:
    type: cloudify.nodes.helm.Release
    properties:
      client_config: { get_input: helm_client_config }
      resource_config:
        name: certmanager
        chart: jetstack/cert-manager
        flags:
          - name: namespace
            value: gitlab
          - name: version
            value: 1.5.4
        set_values:
          - name: installCRDs
            value: true
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host
      - target: certmanager_repo
        type: cloudify.relationships.depends_on
      - target: namespace
        type: cloudify.relationships.depends_on

  gitlab_release:
    type: cloudify.nodes.helm.Release
    properties:
      client_config: { get_input: helm_client_config }
      resource_config:
        name: gitlab
        chart: gitlab/gitlab
        flags:
          - name: namespace
            value: gitlab
          - name: timeout
            value: 15m
        set_values:
          - name: global.hosts.domain
            value: { get_input: gitlab_domain }
          - name: certmanager-issuer.email
            value: { get_input: cert_manager_issuer_email }
          - name: gitlab-runner.install
            value: false
          - name: certmanager.install
            value: false
    relationships:
      - target: helm_install
        type: cloudify.helm.relationships.run_on_host
      - target: gitlab_repo
        type: cloudify.relationships.depends_on
      - target: namespace
        type: cloudify.relationships.contained_in
      - target: certmanager_release
        type: cloudify.relationships.depends_on

  ingress:
    type: cloudify.kubernetes.resources.FileDefinedResource
    properties:
      client_config: { get_input: kubernetes_client_config }
      file:
        resource_path: manifests/ingress.yaml
      use_external_resource: true
    relationships:
      - target: gitlab_release
        type: cloudify.relationships.contained_in

capabilities:

  ingress_hostname:
    description: Ingress hostname to add as DNS record for the GitLab domain
    value: { get_attribute: [ ingress, kubernetes,  "manifests/ingress.yaml#0", status, load_balancer, ingress, 0, hostname ] }
